openapi: 3.0.0
info:
  title: jobs-api
  description: ""
  contact: {}
  version: "1.0"
servers:
  - url: https://temp-jobs-api-p1fv.onrender.com//api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/registerrequest"
                - example:
                    name: mag
                    email: heymari2@hotmail.fr
                    password: teddyyyy
            example:
              name: mag
              email: heymari2@hotmail.fr
              password: teddyyyy
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/loginrequest"
                - example:
                    email: heymarin@hotmail.fr
                    password: teddyyyy
            example:
              email: heymarin@hotmail.fr
              password: teddyyyy
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - jobs
      summary: createJob
      operationId: createJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/createJobRequest"
                - example:
                    position: conseillere
            example:
              position: conseillere
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - jobs
      summary: getAllJobs
      operationId: getAllJobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - jobs
      summary: getSingleJob
      operationId: getSingleJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - jobs
      summary: updateSingleJob
      operationId: updateSingleJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/updateSingleJobRequest"
                - example:
                    position: devsecops
                    status: pending
            example:
              position: devsecops
              status: pending
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - jobs
      summary: deleteSingleJob
      operationId: deleteSingleJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    registerrequest:
      title: registerrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: mag
        email: heymari2@hotmail.fr
        password: teddyyyy
    loginrequest:
      title: loginrequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: heymarin@hotmail.fr
        password: teddyyyy
    createJobRequest:
      title: createJobRequest
      required:
        - position
      type: object
      properties:
        position:
          type: string
      example:
        position: conseillere
    updateSingleJobRequest:
      title: updateSingleJobRequest
      required:
        - position
        - status
      type: object
      properties:
        position:
          type: string
        status:
          type: string
      example:
        position: devsecops
        status: pending
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: auth
    description: ""
  - name: jobs
    description: ""
